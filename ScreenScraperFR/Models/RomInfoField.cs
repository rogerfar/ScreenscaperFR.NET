using System.Text.Json.Serialization;

namespace ScreenScraperFR;

internal class RomInfoFieldsResponse
{
    [JsonPropertyName("infos")]
    public Dictionary<Int32, RomInfoField> Infos { get; set; } = new();
}

public class RomInfoField
{
    /// <summary>
    /// Numeric ID of the info.
    /// </summary>
    [JsonPropertyName("id")]
    public Int32 Id { get; set; }

    /// <summary>
    /// Short name of the info.
    /// </summary>
    [JsonPropertyName("nomcourt")]
    public required String ShortName { get; set; }

    /// <summary>
    /// Long name of the info.
    /// </summary>
    [JsonPropertyName("nom")]
    public required String Name { get; set; }

    /// <summary>
    /// Category of the info.
    /// </summary>
    [JsonPropertyName("categorie")]
    public required String Category { get; set; }

    /// <summary>
    /// Pipe-separated list of platform type IDs where the info is available.
    /// </summary>
    [JsonPropertyName("plateformtypes")]
    public required String PlatformTypes { get; set; }

    /// <summary>
    /// Pipe-separated list of platform IDs where the info is available.
    /// </summary>
    [JsonPropertyName("plateforms")]
    public required String Platforms { get; set; }

    /// <summary>
    /// Type of info (e.g., groupe, text, etc.).
    /// </summary>
    [JsonPropertyName("type")]
    public required String Type { get; set; }

    /// <summary>
    /// Indicates if the info is auto-generated.
    /// </summary>
    [JsonPropertyName("autogen")]
    [JsonConverter(typeof(JsonBooleanConverter))]
    public Boolean IsAutoGenerated { get; set; }

    /// <summary>
    /// Indicates if the info supports multiple regions.
    /// </summary>
    [JsonPropertyName("multiregions")]
    [JsonConverter(typeof(JsonBooleanConverter))]
    public Boolean IsMultiRegion { get; set; }

    /// <summary>
    /// Indicates if the info supports multiple platform. May be empty or missing.
    /// </summary>
    [JsonPropertyName("multisupports")]
    [JsonConverter(typeof(JsonBooleanConverter))]
    public Boolean SupportsMultiplePlatforms { get; set; }

    /// <summary>
    /// Indicates if the info supports multiple versions. May be empty or missing.
    /// </summary>
    [JsonPropertyName("multiversions")]
    [JsonConverter(typeof(JsonBooleanConverter))]
    public Boolean IsMultiVersion { get; set; }

    /// <summary>
    /// Indicates if the info allows multiple choices.
    /// </summary>
    [JsonPropertyName("multichoix")]
    [JsonConverter(typeof(JsonBooleanConverter))]
    public Boolean IsMultiChoice { get; set; }
}
